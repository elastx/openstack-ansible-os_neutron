---
# Copyright 2017, Elastx AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Add opflex repository (APT)
  apt_repository:
    repo: "{{ opflex_repo.repo }}"
    state: "{{ opflex_repo.state }}"
  register: opflex_add_repo
  until: opflex_add_repo|success
  retries: 5
  delay: 2
  when: 
    - ansible_pkg_mgr == 'apt'
  tags:
    - opflex_install

- name: Install opflex packages
  package:
    name: "{{ neutron_optional_opflex_packages }}"
    state: "{{ neutron_package_state }}"
    update_cache: "{{ (ansible_pkg_mgr in ['apt', 'zypper']) | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"
  tags:
    - opflex_install
  notify:
    - Restart neutron services

- name: Copy dhclient config
  template:
    src: "dhclient.conf.j2"
    dest: "{{ opflex_dhclient_conf_target }}"
    owner: "root"
    group: "root"
    mode: "0644"
  tags:
    - opflex_config

- name: Copy apic network constraints config
  config_template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "{{ item.group|default(neutron_system_group_name) }}"
    mode: "0640"
    config_overrides: "{{ item.config_overrides }}"
    config_type: "{{ item.config_type }}"
  with_items:
    - src: "plugins/ml2/cisco_apic_network_constraints.ini.j2"
      dest: "{{ neutron_conf_dir }}/plugins/ml2/cisco_apic_network_constraints.ini"
      config_overrides: "{{ neutron_opflex_network_constraints_ini_overrides }}"
      config_type: "ini"
  notify:
    - Restart neutron services
  when:
    - neutron_services['neutron-server']['group'] in group_names
  tags:
    - opflex_config

- name: Copy opflex ovs agent config
  config_template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "{{ item.group|default(neutron_system_group_name) }}"
    mode: "0640"
    config_overrides: "{{ item.config_overrides }}"
    config_type: "{{ item.config_type }}"
  with_items:
    - src: "opflex-agent-ovs/opflex-agent-ovs.conf.j2"
      dest: "/etc/opflex-agent-ovs/opflex-agent-ovs.conf"
      config_overrides: "{{ neutron_opflex_agent_ovs_json_overrides }}"
      config_type: "json"
  notify:
    - Restart neutron services
  when:
    - neutron_services['opflex-neutron-agent']['group'] in group_names
  tags:
    - opflex_config

- name: Create OVS integration bridge
  openvswitch_bridge:
    bridge: "{{ opflex_integration_bridge }}"
    state: present
    fail_mode: secure
  when:
    - neutron_services['opflex-neutron-agent']['group'] in group_names
  tags:
    - opflex_config

- name: Create OVS port (VXLAN)
  openvswitch_port:
    bridge: "{{ opflex_integration_bridge }}"
    port: "{{ opflex_integration_bridge }}_vxlan0"
    state: present 
    set: "Interface {{ opflex_integration_bridge }}_vxlan0 type=vxlan options:remote_ip=flow options:dst_port=8472"
  when:
    - (neutron_services['opflex-neutron-agent']['group'] in group_names) and (neutron_vxlan_enabled | bool)
  tags:
    - opflex_config

- name: Create OVS port (VLAN)
  openvswitch_port:
    bridge: "{{ opflex_integration_bridge }}"
    port: "{{ opflex_vlan_trunk_iface }}"
    state: present 
  when:
    - (neutron_services['opflex-neutron-agent']['group'] in group_names) and (not neutron_vxlan_enabled | bool)
  tags:
    - opflex_config
